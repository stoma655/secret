type Settings = vec opt text;
type PathObj = 
 record {
   data_1: opt text;
   data_2: opt text;
   data_3: opt text;
   data_4: opt text;
   data_5: opt text;
   path: opt text;
   "principal": opt text;
   status: opt nat;
   views: opt nat;
 };
type Path = text;
type Layouts = vec opt text;
type Elems = vec opt Elem;
type Elem = 
 record {
   clicks: opt text;
   data_1: opt text;
   data_10: opt text;
   data_11: opt text;
   data_12: opt text;
   data_13: opt nat;
   data_14: opt nat;
   data_15: opt nat;
   data_2: opt text;
   data_3: opt text;
   data_4: opt text;
   data_5: opt text;
   data_6: opt text;
   data_7: opt text;
   data_8: opt text;
   data_9: opt text;
   e_type: opt text;
   id: opt nat;
   link: opt text;
   src: opt text;
   "text": opt text;
   views: opt text;
 };
service : {
  allElementsTab: () -> (vec record {
                               principal;
                               Elems;
                             }) query;
  allLayoutsTab: () -> (vec record {
                              principal;
                              Layouts;
                            }) query;
  allPaths: () -> (vec record {
                         Path;
                         PathObj;
                       }) query;
  allUsers: () -> (vec record {
                         principal;
                         Settings;
                       }) query;
  elementsTabSize: () -> (nat) query;
  getElements: (text) -> (opt Elems) query;
  getLayouts: (text) -> (opt Layouts) query;
  getPath: (Path) -> (opt PathObj) query;
  getSettings: (text) -> (opt Settings) query;
  layoutsTabSize: () -> (nat) query;
  pathsSize: () -> (nat) query;
  setElements: (text, Elems) -> (text);
  setLayouts: (text, Layouts) -> (text);
  setPath: (Path, PathObj) -> (text);
  setSettings: (text, Settings) -> (text);
  usersSize: () -> (nat) query;
  whoami: () -> (principal) query;
}
